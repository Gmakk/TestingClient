server:
  port: 9094
spring:
  security:
    oauth2:
      client:
        registration:
          testing-admin-client: #--??? ???????
            provider: testingsystem
            client-id: testing-admin-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:9094/login/oauth2/code/testing-admin-client"
            scope: writeTestCases,deleteTestCases,fullAccess,openid

        provider:
          testingsystem:
            issuer-uri: http://auth-server:9093
  artemis:
    mode: native
    #    broker-url: "tcp://192.168.1.210:9876"
    user: "gmak"
    password: "G4s7Zd6h2"
  rabbitmq:
    template:
      default-receive-queue: general
#  kafka:
#    template:
#      default-topic: testingSystem
#    bootstrap-servers:
#      - localhost:9092
#    consumer:
#      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#      group-id: testing_client
#      properties:
#        spring:
#          json:
#            trusted:
#              packages: edu.*
#          deserializer:
#            value:
#              delegate:
#                class: org.springframework.kafka.support.serializer.JsonDeserializer
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer

  jpa:
    defer-datasource-initialization: true #so that data.sql is executed after creating tables via ddl-auto: create
logging:
  level:
    org.springframework.security: trace



